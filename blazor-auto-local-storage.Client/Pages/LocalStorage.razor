@page "/local-storage"
@using blazor_auto_local_storage.Client.Interfaces
@rendermode InteractiveAuto

<PageTitle>Local Storage</PageTitle>

<div class="mb-3">
    <p class="fw-normal"><strong>Guid gerado:</strong> @currentGuid</p>
</div>
<div class="d-grid gap-2 col-3">
    <button class="btn btn-primary" @onclick="GenerateGuid">Gerar Guid</button>
</div>

<hr />

<div class="d-grid gap-2 col-3">
    <button class="btn btn-success" @onclick="SetKeyLocalStorageAsync">Salvar Guid</button>
</div>

<hr />

<div class="mb-3">
    <p class="fw-normal"><strong>Guid obtido:</strong> @localGuid</p>
</div>
<div class="d-grid gap-2 col-3">
    <button class="btn btn-info" @onclick="GetKeyLocalStorageAsync">Obter Guid</button>
</div>

<hr />

<div class="d-grid gap-2 col-3">
    <button class="btn btn-warning" @onclick="RemoveKeyLocalStorageAsync">Remover Chave</button>
</div>

<hr />

<div class="d-grid gap-2 col-5">
    <button class="btn btn-danger" @onclick="ClearLocalStorageAsync">Limpar Local Storage</button>
</div>

@code {
    [Inject]
    public ILocalStorageService LocalStorageService { get; set; } = null!;

    private Guid currentGuid = Guid.NewGuid();
    private string localGuid = string.Empty;

    private void GenerateGuid() =>
        currentGuid = Guid.NewGuid();

    private async Task SetKeyLocalStorageAsync() =>
        await LocalStorageService.SetItemAsync("Guid", currentGuid);

    private async Task GetKeyLocalStorageAsync() =>
        localGuid = await LocalStorageService.GetItemAsync<string>("Guid") ?? string.Empty;

    private async Task RemoveKeyLocalStorageAsync() =>
        await LocalStorageService.RemoveItemAsync("Guid");

    private async Task ClearLocalStorageAsync() =>
        await LocalStorageService.ClearAsync();
}
